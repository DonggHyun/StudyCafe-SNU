<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.KioskSNU.snu.mapper.AccountMapper">
    <resultMap id="accountResultMap" type="accountAlias">
        <id     column="id"                     property="id"/>
        <result column="username"               property="username"/>
        <result column="password"               property="password"/>
        <result column="phoneNumber"            property="phoneNumber"/>
        <result column="point"                  property="point"/>
        <result column="remainTime"             property="remainTime"/>
    </resultMap>

    <insert id="insert" parameterType="accountAlias">
        insert
        into        account (username, password, phoneNumber, point, remainTime)
        values      (#{username}, #{password}, #{phoneNumber}, #{point}, #{remainTime});
    </insert>

    <update id="update" parameterType="accountAlias">
        update      account
        set         username = #{username},
                    password = #{password},
                    phoneNumber = #{phoneNumber},
                    point = #{point},
                    remainTime = #{remainTime}
        where       id = #{id};
    </update>

    <delete id="delete" parameterType="accountAlias">
        delete
        from        account
        where       id = #{id};
    </delete>

    <select id="getById" parameterType="int" resultMap="accountResultMap">
        select      *
        from        account
        where       id = #{id};
    </select>

    <select id="getByUsername" parameterType="String" resultMap="accountResultMap">
        select      *
        from        account
        where       username = #{username};
    </select>

    <select id="getAll" resultMap="accountResultMap">
        select      *
        from        account
        order by    id;
    </select>

    <select id="getAllByPhoneNumber" parameterType="String" resultMap="accountResultMap">
        select      *
        from        account
        where       phoneNumber = #{phoneNumber}
        order by    (
            select ifnull(max(startDateTime), 0)
            from usageSeat
            where account_id in (
                select id
                from account
                where phoneNumber = #{phoneNumber}
                )
            group by account_id
        ) desc;
    </select>

    <select id="getCount" resultType="int">
        select count(*)
        from account
    </select>

    <select id="selectPage" parameterType="map" resultType="accountAlias">
        select *
        from account
        ORDER BY id DESC
        LIMIT #{offset}, #{pageSize}
    </select>
</mapper>