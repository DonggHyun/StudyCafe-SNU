<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.KioskSNU.snu.mapper.PaymentMapper">
    <resultMap id="paymentResultMap" type="paymentAlias">
        <id     column="id"                     property="id"/>
        <result column="account_id"             property="account_id"/>
        <result column="account_username"       property="account_username"/>
        <result column="account_password"       property="account_password"/>
        <result column="account_phoneNumber"    property="account_phoneNumber"/>
        <result column="account_point"          property="account_point"/>
        <result column="account_remainTime"     property="account_remainTime"/>
        <result column="dateTime"               property="dateTime"/>
        <result column="amount"                 property="amount"/>
        <result column="usedPoint"              property="usedPoint"/>
        <result column="log"                    property="log"/>
    </resultMap>

    <insert id="insert" parameterType="paymentAlias">
        insert
        into        payment (account_id, dateTime, amount, usedPoint, log)
        values      (#{account_id}, #{dateTime}, #{amount}, #{usedPoint}, #{log});
    </insert>

    <update id="update" parameterType="paymentAlias">
        update      payment
        set         account_id = #{account_id},
                    dateTime = #{dateTime},
                    amount = #{amount},
                    usedPoint = #{usedPoint},
                    log = #{log}
        where       id = #{id};
    </update>

    <delete id="delete" parameterType="paymentAlias">
        delete
        from        payment
        where       id = #{id};
    </delete>

    <select id="getById" parameterType="int" resultMap="paymentResultMap">
        select      payment.id                              as id,
                    account.id                              as account_id,
                    account.username                        as account_username,
                    account.password                        as account_password,
                    account.phoneNumber                     as account_phoneNumber,
                    account.point                           as account_point,
                    account.remainTime                      as account_remainTime,
                    payment.dateTime                        as dateTime,
                    payment.amount                          as amount,
                    payment.usedPoint                       as usedPoint,
                    payment.log                             as log
        from        payment
        join        account
        on          payment.account_id = account.id
        where       payment.id = #{id};
    </select>

    <select id="getAll" resultMap="paymentResultMap">
        select      payment.id                              as id,
                    account.id                              as account_id,
                    account.username                        as account_username,
                    account.password                        as account_password,
                    account.phoneNumber                     as account_phoneNumber,
                    account.point                           as account_point,
                    account.remainTime                      as account_remainTime,
                    payment.dateTime                        as dateTime,
                    payment.amount                          as amount,
                    payment.usedPoint                       as usedPoint,
                    payment.log                             as log
        from        payment
        join        account
        on          payment.account_id = account.id
        order by    payment.dateTime desc;
    </select>

    <select id="getAllByAccount" parameterType="accountAlias" resultMap="paymentResultMap">
        select      payment.id                              as id,
                    account.id                              as account_id,
                    account.username                        as account_username,
                    account.password                        as account_password,
                    account.phoneNumber                     as account_phoneNumber,
                    account.point                           as account_point,
                    account.remainTime                      as account_remainTime,
                    payment.dateTime                        as dateTime,
                    payment.amount                          as amount,
                    payment.usedPoint                       as usedPoint,
                    payment.log                             as log
        from        payment
        join        account
        on          payment.account_id = account.id
        where       account.id = #{id}
        order by    payment.dateTime desc;
    </select>

    <select id="getAllBy1Year" resultType="com.KioskSNU.snu.dto.PaymentDTO">
        select      payment.id                              as id,
                    account.id                              as account_id,
                    account.username                        as account_username,
                    account.password                        as account_password,
                    account.phoneNumber                     as account_phoneNumber,
                    account.point                           as account_point,
                    account.remainTime                      as account_remainTime,
                    payment.dateTime                        as dateTime,
                    payment.amount                          as amount,
                    payment.usedPoint                       as usedPoint,
                    payment.log                             as log
        from        payment
        join        account
        on          payment.account_id = account.id
        where		date(payment.dateTime) >= date_add(now(), interval -1 year)
        order by    payment.dateTime desc;
    </select>
</mapper>